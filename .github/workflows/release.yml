name: Release zrun

on:
  # 仅允许手动触发
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.5'

      - name: Get version info
        id: get_version
        run: |
          # 获取今天的日期作为版本号
          DATE_VERSION=$(date +%Y.%m.%d)
          echo "DATE_VERSION=$DATE_VERSION" >> $GITHUB_ENV
          echo "date_version=$DATE_VERSION" >> $GITHUB_OUTPUT
          
          # 从 main.go 提取 SyntaxVersion
          SYNTAX_VERSION=$(grep "const SyntaxVersion" main.go | cut -d '"' -f 2)
          echo "SYNTAX_VERSION=$SYNTAX_VERSION" >> $GITHUB_ENV
          echo "syntax_version=$SYNTAX_VERSION" >> $GITHUB_OUTPUT
          
          echo "Version: $DATE_VERSION, Syntax Version: $SYNTAX_VERSION"

      - name: Update versions in files
        run: |
          # 更新 main.go 中的版本
          sed -i "s/const version = \".*\"/const version = \"${{ env.DATE_VERSION }}\"/" main.go
          # 更新 version.json 中的版本
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ env.DATE_VERSION }}\"/" version.json
          sed -i "s/\"syntax_version\": \".*\"/\"syntax_version\": \"${{ env.SYNTAX_VERSION }}\"/" version.json
          
          # 显示更改
          echo "Updated main.go:"
          grep "const version" main.go
          echo "Updated version.json:"
          cat version.json

      - name: Commit version changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add main.go version.json
          git commit -m "Update to version ${{ env.DATE_VERSION }}"
          git push

      - name: Build for all platforms
        run: |
          mkdir -p dist
          GOOS=windows GOARCH=amd64 go build -o dist/zrun-windows-amd64.exe .
          GOOS=linux GOARCH=amd64 go build -o dist/zrun-linux-amd64 .
          GOOS=darwin GOARCH=amd64 go build -o dist/zrun-macos-amd64 .
          GOOS=darwin GOARCH=arm64 go build -o dist/zrun-macos-arm64 .

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.DATE_VERSION }}
          name: Release v${{ env.DATE_VERSION }}
          draft: false
          prerelease: false
          files: |
            dist/zrun-windows-amd64.exe
            dist/zrun-linux-amd64
            dist/zrun-macos-amd64
            dist/zrun-macos-arm64