name: Release zrun

on:
  schedule:
    # 每周五凌晨12点触发 (UTC时间)
    - cron: '0 0 * * 5'
  # 允许手动触发
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.5'

      - name: Get current date
        id: get_date
        run: |
          # 如果是周六构建，则添加后缀
          if [ $(date +\%u) -eq 6 ]; then
            echo "VERSION=v$(date +\%Y.\%m.\%d)-Saturday Build" >> $GITHUB_ENV
            echo "version=v$(date +\%Y.\%m.\%d)-Saturday Build" >> $GITHUB_OUTPUT
          else
            echo "VERSION=v$(date +\%Y.\%m.\%d)" >> $GITHUB_ENV
            echo "version=v$(date +\%Y.\%m.\%d)" >> $GITHUB_OUTPUT
          fi

      - name: Update version in main.go
        run: |
          VERSION_NUM=$(echo $VERSION | sed 's/^v//')
          sed -i "s/const version = \".*\"/const version = \"$VERSION_NUM\"/" main.go
          grep "const version" main.go

      - name: Build for all platforms
        run: |
          mkdir -p dist
          GOOS=windows GOARCH=amd64 go build -o dist/zrun-windows-amd64.exe .
          GOOS=linux GOARCH=amd64 go build -o dist/zrun-linux-amd64 .
          GOOS=darwin GOARCH=amd64 go build -o dist/zrun-macos-amd64 .
          GOOS=darwin GOARCH=arm64 go build -o dist/zrun-macos-arm64 .

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_date.outputs.version }}
          name: Release ${{ steps.get_date.outputs.version }}
          draft: false
          prerelease: false
          files: |
            dist/zrun-windows-amd64.exe
            dist/zrun-linux-amd64
            dist/zrun-macos-amd64
            dist/zrun-macos-arm64